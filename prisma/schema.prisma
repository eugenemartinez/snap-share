// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  username  String   @unique
  password  String
  images    Image[]
  createdAt DateTime @default(now())
  avatar    String?  @default("/avatar.png")
  bio       String?

  // Relations for likes and follows
  imageLikes   ImageLike[] // images this user liked
  followers    Follow[]    @relation("following") // users following this user
  following    Follow[]    @relation("follower")  // users this user is following

  @@map("snapshare_user")
}

model Image {
  id          String   @id @default(uuid())
  title       String
  description String
  url         String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String
  createdAt   DateTime @default(now())

  // Relation for likes
  likes       ImageLike[]

  likeCount   Int      @default(0)

  @@map("snapshare_image")
}

model ImageLike {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  image     Image    @relation(fields: [imageId], references: [id], onDelete: Cascade)
  imageId   String
  createdAt DateTime @default(now())

  @@unique([userId, imageId])
  @@map("snapshare_image_like")
}

model Follow {
  id          String   @id @default(uuid())
  follower    User     @relation("follower", fields: [followerId], references: [id], onDelete: Cascade)
  followerId  String
  following   User     @relation("following", fields: [followingId], references: [id], onDelete: Cascade)
  followingId String
  createdAt   DateTime @default(now())

  @@unique([followerId, followingId])
  @@map("snapshare_follow")
}
